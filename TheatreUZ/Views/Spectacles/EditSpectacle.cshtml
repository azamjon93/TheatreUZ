@model TheatreUZ.Models.Spectacle

@{
    ViewBag.Title = "Edit spectacle";
}

<h2>Edit spectacle</h2>

@using (Html.BeginForm("AddSpectacle", "Spectacles"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Spectacle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.GenreID, "GenreID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GenreID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenreID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.StateID, "StateID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.TicketsCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketsCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketsCount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.PlayDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlayDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlayDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-sm btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-sm btn-primary" })
            </div>
        </div>
    </div>
}
